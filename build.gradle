plugins {
    id 'idea'
    id 'net.neoforged.moddev.legacyforge' version '2.0.91'
}

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

legacyForge {
    version = "${minecraft_version}-${forge_version}"
    parchment {
        mappingsVersion = mapping_version
        minecraftVersion = minecraft_version
    }

    runs {
        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'

            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()
            systemProperty 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            server()
            systemProperty 'forge.enabledGameTestNamespaces', mod_id
            programArgument '--nogui'
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom(localRuntime)
}
obfuscation {
    createRemappingConfiguration(configurations.localRuntime)
}

repositories {
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    modImplementation "curse.maven:jaopca-266936:6052504"
    modImplementation "curse.maven:mantle-74924:6635380"
    modImplementation "curse.maven:tinkers-construct-74072:6635554"
}

jar {
    manifest.attributes([
            "MixinConfigs": "${mod_id}.mixins.json",
    ])
}

var generateModMetadata = tasks.register('generateModMetadata', ProcessResources) {
    var replaceProperties = [minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                             forge_version       : forge_version, forge_version_range: forge_version_range,
                             loader_version_range: loader_version_range,
                             mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                             mod_authors         : mod_authors, mod_description: mod_description,]

    inputs.properties replaceProperties
    expand(replaceProperties)
    from("src/main/templates")
    into("build/generated/sources/modMetadata")
}

sourceSets.main.resources.srcDir generateModMetadata
legacyForge.ideSyncTask generateModMetadata

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
